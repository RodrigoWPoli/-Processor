opcode:  operação:
0000     nop
0001     add
0010     addi
0011     sub
0100     subi
0101     cmpi
0110     ld
0111     lda
1000     OR
1001     mult
1010     mov
1011     mova
1100     jmp (jump absoluto)

nop:
0000_0000_0000_0000

add:
A <- A + RS
seleciona o registrador para ler, src da ula para registradores, aciona A para escrita, operação de soma na ULA, 
add rs -> R0 a R7
opcode_rs(RBOutSel)_AluOp_nop
0001_XXX_00_0000000

addi: 
A <- A + cte
aciona A para escrita, operação de soma na ULA, seleciona o src da ula para cte
addi cte
opcode_A_AluOp_cte
0010_1_00_000000000

ld: 
RD <- cte
ld rs cte
opcode_rs(RBInSel)_rb-wr-en_loadSrc_cte
0110_XXX_1_0_0000000

lda: 
A <- cte
lda cte
opcode_A_loadASrc_cte
0111_1_0_0000000000


Fios:
A_wr_en -> escrita no acumulador
add, addi, sub, subi, lda, OR, mult, mova
rb_wr_en -> escrita nos registradores
mov, ld, 
rb_out_sel -> qual registrador ler
add, sub, OR, mult,
rb_in_sel -> qual registrador escrever
mov, ld,
aluSrc -> qual input da ula (cte ou rb)
add, addi, sub, subi, OR, mult, cmpi
loadSrc -> qual dado escrever no rb
mov, ld
loadASrc -> qual dado escrever no acumulador
add, addi, sub, subi, lda, OR, mult, mova
jump_en -> ativar jump
jmp
jump_addr -> qual endereço pro jump